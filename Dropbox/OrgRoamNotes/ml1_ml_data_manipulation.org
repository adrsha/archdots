:PROPERTIES:
:ID:       5263c34c-9dcf-4a2a-81a3-97a0bdb280b1
:END:
#+title: ML1 - ML Data Manipulation
#+filetags: :machine-learning:
#+author:  Adarsha Acharya
#+date:  Jul 13, 2024 12 pm


To determine whether numerical columns follow a normal distribution, we use Q-Q plot, which is a statistical test.

* Preliminary

#+BEGIN_SRC python
    import scipy.stats as stats
    import numpy as np
    import pandas as pd
    import matplotlib.pyplot as plt
    import seaborn as sns
#+END_SRC

#+BEGIN_SRC python
    df = pd.read_csv('~/Documents/Student_data.csv')
    categorical_columns = df.select_dtypes(include=['category', 'object']).columns
    numerical_columns = df.select_dtypes(exclude=['category', 'object']).columns
#+END_SRC

#+BEGIN_SRC python
    #create a figure and axes for subplots
    num_cols = len(numerical_columns)
    fig, axes = plt.subplots(num_cols, 2, figsize=(16, num_cols * 4))

    #plotting histograms and Q-Q plots for each numerical column
    for i, col in enumerate(numerical_columns):
	#histogram on the left subplot
	sns.histplot(df[col], kde=True, ax=axes[i, 0], stat='density', linewidth=1)
	axes[i, 0].set_title(f'Histogram of {col}') 
	axes[i, 0].set_xlabel('')
	axes[i, 0].set_ylabel('Density')
	axes[i, 0].grid(True, linestyle='--', alpha=0.7)

	#Q-Q plot on the right subplot
	stats.probplot(df[col], plot=axes[i, 1], dist='norm', fit=True)
	axes[i, 1].get_lines()[0].set_markersize(2.0) # adjust marker size for clarity
	axes[i, 1].grid(True, linestyle='--', alpha=0.7)
	axes[i, 1].set_title(f'Q-Q Plot for {col}')
	axes[i, 1].set_xlabel('Theoretical Quantiles')
	axes[i, 1].set_ylabel('Sample Quantiles')

    #adjust layout and display the plots
    plt.tight_layout(pad=3.0)
    plt.show()
#+END_SRC

This is descriptive statistics, not statistical tests.

