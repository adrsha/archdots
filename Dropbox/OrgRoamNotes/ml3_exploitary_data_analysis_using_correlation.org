:PROPERTIES:
:ID:       0fd87b62-7c7b-449d-abbb-167e6becd1b9
:END:
#+title: ML3 - Exploitary Data Analysis using correlation
#+author:  Adarsha Acharya
#+date:  Jul 16, 2024 6 pm

* Preliminary

#+BEGIN_SRC python
    import matplotlib.pyplot as plt
    import seaborn as sns
    import pandas as pd

    df = pd.read_csv('~/Documents/Student_data.csv')

    categorical_columns = df.select_dtypes(include=['category', 'object']).columns
    numerical_columns = df.select_dtypes(exclude=['category', 'object']).columns

    numeric_data = df[numerical_columns]
#+END_SRC

* Compute Pairwise Correlation of Numeric Columns

#+BEGIN_SRC python
    # Compute pairwise correlation of numeric columns
    correlation_matrix = numeric_data.corr()

    # Plotting correlation heatmap
    plt.figure(figsize=(12, 10))
    sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f", square=True)
    plt.title('Correlation Matrix of Numeric Features')
    plt.show()
#+END_SRC

* Pairplot of Numerical Features

#+BEGIN_SRC python
    sns.pairplot(df[numerical_columns], diag_kind='kde')
    plt.suptitle('Pairplot of Numerical Features', y=1.02)
    plt.show()
#+END_SRC

* Print List of Columns

#+BEGIN_SRC python
    print(list(df.columns))
#+END_SRC

* Create GPA and Pass/Fail Columns

#+BEGIN_SRC python
    df['GPA'] = df['G3'] / 5  # Since G3 ranges from 0 to 20

    # Create new column 'pass/fail' based on GPA
    df['pass/fail'] = df['G3'].apply(lambda x: 'pass' if x >= 12 else 'fail')
#+END_SRC

* Print Value Counts of Pass/Fail Column

#+BEGIN_SRC python
    print(df['pass/fail'].value_counts())
#+END_SRC

